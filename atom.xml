<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://MGzhou.github.io</id>
    <title>MGzhou的博客</title>
    <updated>2021-09-28T08:44:27.508Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://MGzhou.github.io"/>
    <link rel="self" href="https://MGzhou.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://MGzhou.github.io/images/avatar.png</logo>
    <icon>https://MGzhou.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, MGzhou的博客</rights>
    <entry>
        <title type="html"><![CDATA[python os模块]]></title>
        <id>https://MGzhou.github.io/post/python-os-mo-kuai/</id>
        <link href="https://MGzhou.github.io/post/python-os-mo-kuai/">
        </link>
        <updated>2021-09-28T03:57:13.000Z</updated>
        <content type="html"><![CDATA[<p><strong>python os模块 对文件夹、文件（文件操作函数）</strong></p>
<pre><code class="language-python">os.getcwd()  #返回当前工作路径

os.path.isabs()  #判断是否是绝对路径

os.path.isfile()  #检验给出的路径是否是一个文件

os.path.isdir()  #检验给出的路径是否是一个目录

os.sep  #文件的路径分隔符 如:在windows上是 '\'  而在Linux上是 '/'

os.walk()  #文件遍历
 如:def file_name(file_dir):
    for root, dirs, files in os.walk(file_dir):
        print('root_dir:', root)  # 当前目录路径
        print('sub_dirs:', dirs)  # 当前路径下所有子目录
        print('files:', files)  # 当前路径下所有非目录子文件
        
    file_name('E:/vmware')
 

os.path.splitext()  #分离扩展名

os.system()  #运行shell命令:

os.path.exists()  #检验给出的路径是否真地存:

os.getenv() 与os.putenv()  #读取和设置环境变量

os.linesep  #给出当前平台使用的行终止符	如: windowss使用'\r\n'  ,Linux使用'\n'而Mac使用'\r'

os.name #指示你正在使用的平台：	如:对于Windows，它是'nt'，而对于Linux/Unix用户，它是'posix'

os.chmod（file） #修改文件权限与时间戳

os.exit()  #终止当前进程 

os.remove()  #删除文件 或空文件夹

os.stat() #获取文件属性
</code></pre>
<p>目录操作：</p>
<pre><code class="language-python">os.makedirs(&quot;file1/file2/file3&quot;) 	 #创建文件夹目录. 创建多级目录
os.mkdir(&quot;file&quot;)    # 创建文件夹. 但是上级目录必须存在

os.copy(&quot;oldfile&quot;,&quot;newfile&quot;)   #oldfile只能是文件夹，newfile可以是文件，也可以是目标目录

os.rename(&quot;oldname&quot;,&quot;newname&quot;)   #重命名文件（目录）    文件或目录都是使用这条命令

os.removedirs()   # 删除多级目录, 要求必须是空的
os.rmdir(&quot;dir&quot;)	#只能删除空目录  

os.listdir()  #返回指定目录下的所有文件和目录名

os.path.split(path)  #返回一个路径的目录名和文件名   
os.path.dirname()  #获取路径名
os.path.basename() #获取文件名

os.path.getsize（filename） #获取文件大小

os.chdir(&quot;path&quot;)   换路径


</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gridea 配置Gitalk 的异常：Error: Bad credentials 和 Error: Not Found.]]></title>
        <id>https://MGzhou.github.io/post/gridea-pei-zhi-gitalk-de-yi-chang-error-bad-credentials-he-error-not-found/</id>
        <link href="https://MGzhou.github.io/post/gridea-pei-zhi-gitalk-de-yi-chang-error-bad-credentials-he-error-not-found/">
        </link>
        <updated>2021-09-14T03:32:50.000Z</updated>
        <content type="html"><![CDATA[<h1 id="gridea-配置gitalk-的异常error-bad-credentials-和-error-not-found">Gridea 配置Gitalk 的异常：Error: Bad credentials 和 Error: Not Found.</h1>
<h2 id="1-error-bad-credentials">1. Error: Bad credentials</h2>
<p>这个是因为我注册【Github的个人设置-Develop settings中的OAuth Apps】有错。</p>
<p>错误是我的Github账户名称有大写，但我在Authorization callback URL和Homepage URL 都按小写填了。当我把对应小写改回大写，就没有异常了。</p>
<blockquote>
<p>例如我的账户名称是<code>ABCaaaaa</code> 但我看到我的个人博客链接是小写的，于是我把 Authorization callback URL 填了 <code>https://abcaaaaa.github.io</code></p>
<p>这就导致了错误，因为<code>Authorization callback URL</code> 需要的是仓库地址或个人域名，所有填小写的话，<code>github</code> 就不能检索到仓库地址了。</p>
<p>要把<code>https://abcaaaaa.github.io</code> 改为<code>https://ABCaaaaa.github.io</code></p>
</blockquote>
<h2 id="2-error-not-found">2. Error: Not Found</h2>
<p>我是把<code>Authorization callback URL</code> 的地址放在仓库名称属性上了，所以弹出异常。</p>
<p>把链接的<code>https://</code> 去掉，留下仓库名称即可。</p>
<p><mark>改完之后要保存配置再同步</mark></p>
<p><mark>改完之后要保存配置再同步</mark></p>
<p><mark>改完之后要保存配置再同步</mark></p>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/MGzhou/zhoupic/raw/master/img/image-20210914112857755.png" alt="image-20210914112857755" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello World!]]></title>
        <id>https://MGzhou.github.io/post/hello-world!/</id>
        <link href="https://MGzhou.github.io/post/hello-world!/">
        </link>
        <updated>2021-09-13T07:57:17.000Z</updated>
        <content type="html"><![CDATA[<p>2021.9.13</p>
]]></content>
    </entry>
</feed>